
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/styles.css" />
    <title>To-Do List</title>
  </head>
  <style>
    body, h1, h2, h3, p {
    margin: 0;
    padding: 0;
}

/* Create a clean container for the app */
.container {
    max-width: 500px;
    margin: 0 auto;
    padding: 20px;
    border: 1px solid #ccc;
    border-radius: 5px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    background-color: #f7f7f7;
    font-family: Arial, sans-serif;
}

/* Style the input and button */
form {
    display: flex;
    margin-bottom: 20px;
}

input[type="text"] {
    flex: 1;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
}

button[type="submit"] {
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    background-color: #007bff;
    color: white;
    cursor: pointer;
}

/* Style the task list */
.task-list {
    list-style: none;
    padding: 0;
}

.task-item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin: 10px 0;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    background-color: white;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.task-item span {
    flex: 1;
    margin-left: 10px;
}

.delete-button,
.edit-button {
    padding: 5px 10px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

.delete-button {
    background-color: #dc3545;
    color: white;
    margin-right: 5px;
}

.edit-button {
    background-color: #ffc107;
    color: black;
}

/* Additional styles for responsiveness */
@media (max-width: 600px) {
    .container {
        max-width: 100%;
        padding: 10px;
    }

    input[type="text"] {
        padding: 8px;
    }

    button[type="submit"] {
        padding: 8px 16px;
    }

    .task-item {
        padding: 8px;
    }

    .delete-button,
    .edit-button {
        padding: 4px 8px;
    }
}
    
  </style>
  <body>
    <div class="container">
      <h1>To-Do List</h1>
      <form action="/add" method="post">
        <input
          type="text"
          name="taskName"
          id="taskName"
          placeholder="Enter a new task..."
        />
        <button type="submit">Add Task</button>
      </form>
     
      <ul class="task-list">
        <% tasks.forEach(task => { %>
        <li >
          <form
            action="/delete"
            class="task-item"
            method="post"
            class="task-item"
          >

            <input type="checkbox" name="checkbox" value="<%= task._id %>" />
            <span><%= task.name %></span>

            <button class="edit-button " type="button">Edit</button>
            <button class="delete-button" type="submit">Delete</button>
          </form>
        </li>
        <% }); %>
      </ul>
      <script>
        const editButtons = document.querySelectorAll(".edit-button");

        editButtons.forEach((button) => {
          button.addEventListener("click", (event) => {
            const listItem = button.parentElement;
            const taskNameSpan = listItem.querySelector("span");
            const editInput = document.createElement("input");
            editInput.value = taskNameSpan.textContent;
            listItem.replaceChild(editInput, taskNameSpan);

            const saveButton = document.createElement("button");
            saveButton.textContent = "Save";
            listItem.appendChild(saveButton);

            editInput.addEventListener("keydown", (event) => {
              if (event.key === "Enter") {
                saveButton.click();
              }
            });

            saveButton.addEventListener("click", async () => {
              const updatedTaskName = editInput.value;
              const taskId = listItem.querySelector(
                'input[type="checkbox"]'
              ).value;

              try {
                const response = await fetch("/edit", {
                  method: "POST",
                  headers: {
                    "Content-Type": "application/x-www-form-urlencoded",
                  },
                  body: `taskId=${taskId}&taskName=${encodeURIComponent(
                    updatedTaskName
                  )}`,
                });

                if (response.status === 200) {
                  taskNameSpan.textContent = updatedTaskName;
                  listItem.replaceChild(taskNameSpan, editInput);
                  listItem.removeChild(saveButton);
                }
              } catch (error) {
                console.error(error);
              }
            });
          });
        });
      </script>
    </div>
  </body>
</html>
